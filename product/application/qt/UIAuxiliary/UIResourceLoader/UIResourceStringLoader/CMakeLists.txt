include(TemplateTools)


##### generate files
set(RESOURCE_IDE_FOLDER UI/codegen)
set(RESOURCE_OUT_PUT_DIR ${UCF_CODE_GENERATOR_DIR}/UIResourceStringLoader)
set(RESOURCE_GENERATED_TARGETS )

set(RESOURCE_HEADER_OUT_PUT_FILE ResourceStringMap.h)
set(RESOURCE_HEADER_OUTPUT_PATH ${RESOURCE_OUT_PUT_DIR}/${RESOURCE_HEADER_OUT_PUT_FILE})
set(RESOURCE_HEADER_TEMEPLATE_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resource/templates/ResourceStringMap.h.j2)
generate_from_template(
    TEMPLATE_FILE ${RESOURCE_HEADER_TEMEPLATE_FILE}
    INPUT_FILE ${RESOURCE_STRING_JSON_PATH}
    OUTPUT_FILE ${RESOURCE_HEADER_OUTPUT_PATH}
    GFT_TARGET_HEADER
)
list(APPEND RESOURCE_GENERATED_TARGETS ${GFT_TARGET_HEADER})

set(RESOURCE_CPP_OUT_PUT_FILE ResourceStringMap.cpp)
set(RESOURCE_CPP_OUTPUT_PATH ${RESOURCE_OUT_PUT_DIR}/${RESOURCE_CPP_OUT_PUT_FILE})
set(RESOURCE_CPP_TEMEPLATE_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resource/templates/ResourceStringMap.cpp.j2)
generate_from_template(
    TEMPLATE_FILE ${RESOURCE_CPP_TEMEPLATE_FILE}
    INPUT_FILE ${RESOURCE_STRING_JSON_PATH}
    OUTPUT_FILE ${RESOURCE_CPP_OUTPUT_PATH}
    GFT_TARGET_CPP
)
list(APPEND RESOURCE_GENERATED_TARGETS ${GFT_TARGET_CPP})

set(RESOURCE_STRING_TOKEN_OUT_PUT_FILE UIStringToken.h)
set(RESOURCE_STRING_TOKEN_OUTPUT_PATH ${RESOURCE_OUT_PUT_DIR}/${RESOURCE_STRING_TOKEN_OUT_PUT_FILE})
set(RESOURCE_STRING_TOKEN_TEMEPLATE_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resource/templates/UIStringToken.h.j2)
generate_from_template(
    TEMPLATE_FILE ${RESOURCE_STRING_TOKEN_TEMEPLATE_FILE}
    INPUT_FILE ${RESOURCE_STRING_JSON_PATH}
    OUTPUT_FILE ${RESOURCE_STRING_TOKEN_OUTPUT_PATH}
    GFT_STRING_TOKEN_HEADER
)
list(APPEND RESOURCE_GENERATED_TARGETS ${GFT_STRING_TOKEN_HEADER})

set(RESOURCE_STRING_TOKEN_CV_OUT_PUT_FILE UIStringConvert.cpp)
set(RESOURCE_STRING_TOKEN_CV_OUTPUT_PATH ${RESOURCE_OUT_PUT_DIR}/${RESOURCE_STRING_TOKEN_CV_OUT_PUT_FILE})
set(RESOURCE_STRING_TOKEN_CV_TEMEPLATE_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resource/templates/UIStringConvert.cpp.j2)
generate_from_template(
    TEMPLATE_FILE ${RESOURCE_STRING_TOKEN_CV_TEMEPLATE_FILE}
    INPUT_FILE ${RESOURCE_STRING_JSON_PATH}
    OUTPUT_FILE ${RESOURCE_STRING_TOKEN_CV_OUTPUT_PATH}
    GFT_STRING_TOKEN_CV
)
list(APPEND RESOURCE_GENERATED_TARGETS ${GFT_STRING_TOKEN_CV})


##### generate files done

include(BuildQtModule)
if (WIN32)
    set(ADD_DEFINITIONS UIResourceStringLoader_DLL)
else()
    set(ADD_DEFINITIONS)
endif()

set(MODULE_MODULE_NAME UIResourceStringLoader)
set(MODULE_IDE_FOLDER UI)

set(MODULE_HEADER_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include ${RESOURCE_OUT_PUT_DIR})

set(MODULE_HEADER_FILES #for include and install header

    include/UIResourceStringLoader/UIResourceStringLoaderExport.h
    include/UIResourceStringLoader/UIResourceStringLoader.h
    ${RESOURCE_STRING_TOKEN_OUTPUT_PATH}
)
set(MODULE_SOURCE_PRIVATE
    src/UIResourceStringLoader.cpp
    src/LoggerDefine.h
    src/AppUIStringLoader.h
    src/AppUIStringLoader.cpp
    ${RESOURCE_HEADER_OUTPUT_PATH}
    ${RESOURCE_CPP_OUTPUT_PATH}
    ${RESOURCE_STRING_TOKEN_CV_OUTPUT_PATH}
)
set(MODULE_DEPENDENCIES_PUBLIC
    Qt6::Qml
)
set(MODULE_DEPENDENCIES_PRIVATE
    CommonHeadFramework
    ResourceLoader
    ResourceStringLoader
    MasterLog
)

set(MODULE_BUILD_INTERFACE_DIR ${MODULE_HEADER_BASE_DIR} ${RESOURCE_OUT_PUT_DIR})
set(MODULE_INSTALL_INTERFACE_DIR include)
set(MODULE_BUILD_PRIVATE_DIR src)

BuildQtModule(
MODULE_NAME ${MODULE_MODULE_NAME}
TARGET_SOURCE_PRIVATE ${MODULE_SOURCE_PRIVATE}
TARGET_SOURCE_HEADER_BASE_DIR ${MODULE_HEADER_BASE_DIR}
TARGET_SOURCE_PUBLIC_HEADER ${MODULE_HEADER_FILES}
TARGET_DEPENDENCIES_PRIVATE ${MODULE_DEPENDENCIES_PRIVATE}
TARGET_DEPENDENCIES_PUBLIC ${MODULE_DEPENDENCIES_PUBLIC}
TARGET_INCLUDE_DIRECTORIES_BUILD_INTERFACE  ${MODULE_BUILD_INTERFACE_DIR}
TARGET_INCLUDE_DIRECTORIES_INSTALL_INTERFACE ${MODULE_INSTALL_INTERFACE_DIR}
TARGET_INCLUDE_DIRECTORIES_PRIVATE ${MODULE_BUILD_PRIVATE_DIR}
TARGET_DEFINITIONS ${ADD_DEFINITIONS}
IDE_FOLDER ${MODULE_IDE_FOLDER}
)

add_dependencies(${MODULE_MODULE_NAME} ${GFT_TARGET_HEADER} ${GFT_TARGET_CPP} )
