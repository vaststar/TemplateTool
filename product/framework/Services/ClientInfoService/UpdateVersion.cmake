# 设置项目版本号
set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 0)
 
# 读取 version.h 文件
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/version.h")
    # 读取 PROJECT_VERSION_PATCH 的值
    file(READ "version.h" VERSION_H_CONTENTS)
    string(REGEX MATCH "PROJECT_VERSION_PATCH = \"([0-999]+)\"" _match ${VERSION_H_CONTENTS})
    set(PROJECT_VERSION_PATCH ${CMAKE_MATCH_1})
    message(STATUS "Read patch: ${PROJECT_VERSION_PATCH}")
 
    # 将 PROJECT_VERSION_PATCH 值加 1
    math(EXPR PROJECT_VERSION_PATCH "${PROJECT_VERSION_PATCH} + 1")
    set(PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")
    message(STATUS "更新版本号: ${PROJECT_VERSION}")
else()
    set(PROJECT_VERSION_PATCH 1)
endif()

# 获取编译日期
string(TIMESTAMP PROJECT_COMPILE_YEAR "%Y" UTC)
string(TIMESTAMP PROJECT_COMPILE_MONTH "%m" UTC)
string(TIMESTAMP PROJECT_COMPILE_DAY "%d" UTC)
string(TIMESTAMP PROJECT_COMPILE_TIME "%Y-%m-%d %H:%M:%S" UTC)
  
# 生成版本文件
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/version.h.in ${CMAKE_CURRENT_SOURCE_DIR}/version.h @ONLY)