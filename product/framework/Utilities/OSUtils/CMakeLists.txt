include(BuildModule)

set(MODULE_MODULE_NAME OSUtils)
set(MODULE_IDE_FOLDER framework/Utilities)

set(MODULE_HEADER_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)

set(MODULE_HEADER_FILES #for include and install header
    include/ucf/Utilities/OSUtils/OSUtils.h
)
set(MODULE_SOURCE_PRIVATE
    src/OSUtils.cpp
)
if (WIN32)
    list(APPEND MODULE_SOURCE_PRIVATE 
    src/OSUtils_Win.h
    src/OSUtils_Win.cpp)
elseif (APPLE)
    list(APPEND MODULE_SOURCE_PRIVATE 
    src/OSUtils_Mac.h
    src/OSUtils_Mac.cpp)
elseif (UNIX)
    list(APPEND MODULE_SOURCE_PRIVATE 
    src/OSUtils_Mac.h
    src/OSUtils_Mac.cpp)
endif()
set(MODULE_DEPENDENCIES_PUBLIC
    UtilitiesCommonFile
)
set(MODULE_DEPENDENCIES_PRIVATE
)

set(MODULE_BUILD_INTERFACE_DIR ${MODULE_HEADER_BASE_DIR})
set(MODULE_INSTALL_INTERFACE_DIR include)
set(MODULE_BUILD_PRIVATE_DIR src)

BuildModule(
MODULE_NAME ${MODULE_MODULE_NAME}
TARGET_SOURCE_PRIVATE ${MODULE_SOURCE_PRIVATE}
TARGET_SOURCE_HEADER_BASE_DIR ${MODULE_HEADER_BASE_DIR}
TARGET_SOURCE_PUBLIC_HEADER ${MODULE_HEADER_FILES}
TARGET_DEPENDENCIES_PRIVATE ${MODULE_DEPENDENCIES_PRIVATE}
TARGET_DEPENDENCIES_PUBLIC ${MODULE_DEPENDENCIES_PUBLIC}
TARGET_INCLUDE_DIRECTORIES_BUILD_INTERFACE  ${MODULE_BUILD_INTERFACE_DIR}
TARGET_INCLUDE_DIRECTORIES_INSTALL_INTERFACE ${MODULE_INSTALL_INTERFACE_DIR}
TARGET_INCLUDE_DIRECTORIES_PRIVATE ${MODULE_BUILD_PRIVATE_DIR}
TARGET_DEFINITIONS ${ADD_UTILITIES_DEFINITIONS}
IDE_FOLDER ${MODULE_IDE_FOLDER}
)
